# -*- coding: utf-8 -*-
"""sentimentanalyasis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DnwSIo1vLeZGxFHKxpbjRDKfktg7yMut

#Sentimental Analasis
"""

x_train=["This was awesome an awsome movie",
         "Great movie! I liked it a lot",
         "Happy Ending ! awesome acting by the hero",
         "loved it! truly great",
         "bad not upto the mark",
         "could have been better",
         "Surely a Disappointing movie"]
y_train=[1,1,1,1,0,0,0] # 1-positive review 0-not a positive review

from nltk.tokenize import RegexpTokenizer
from nltk.stem.porter import PorterStemmer
from nltk.corpus import stopwords
import nltk
nltk.download('stopwords')

tokenizer=RegexpTokenizer(r'\w+')
en_stopwords=set(stopwords.words('english'))
ps=PorterStemmer()

def getCleandText(text):
  text=text.lower()
  tokens=tokenizer.tokenize(text)
  new_tokens=[token for token in tokens if token not in en_stopwords]
  stemmed_tokens=[ps.stem(tokens) for tokens in new_tokens]
  clean_text=" ".join(stemmed_tokens)
  return clean_text

x_test=["I was happy & happy and I loved the acting in the movie",
        "The movie I saw was bad"]

x_clean=[getCleandText(i)for i in x_train]
xt_clean=[getCleandText(j)for j in x_test]

"""#Vectorization"""

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(ngram_range=(1,2))
x_vec=cv.fit_transform(x_clean).toarray()
print(x_vec)

print(cv.get_feature_names())

xt_vect=cv.transform(xt_clean).toarray()

xt_vect

"""#Multinomial Naive Bayes"""

from sklearn.naive_bayes import MultinomialNB
mn=MultinomialNB()
mn.fit(x_vec,y_train)
y_pred=mn.predict(xt_vect)
y_pred